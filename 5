import graphviz

def draw_heap(node, graph, parent=None):
    if node is None:
        return

    # Add node to graph
    graph.node(str(node.key))

    # Add edge to parent if applicable
    if parent is not None:
        graph.edge(str(parent.key), str(node.key))

    # Recursively add left and right children to the graph
    draw_heap(node.left, graph, node)
    draw_heap(node.right, graph, node)

def visualize_heap(heap):
    # Create graph object
    graph = graphviz.Graph()

    # Add nodes and edges to the graph
    draw_heap(heap.root, graph)

    # Generate visual representation of the graph
    graph.render()

